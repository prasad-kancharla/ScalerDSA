package com.prasad.homework;

public class EqIndex {
    public static void main(String[] args) {
//        int[] input = {-7, 1, 5, 2, -4, 3, 0};
        int[] input = { 9444, -2556, 7937, 8560, -8622, 1440, -1076, 5987, 1419, 996, -6530, 4583, 8890, -9127, 8801, 9034, -1579, -4395, 1050, 6527, 5959, -1281, -8832, 1363, -9296, -3791, -1316, 4780, 5836, -706, 4650, -3278, 8168, 1329, -3756, 7923, 7291, -6320, -5414, -136, -9627, 4609, -4626, -4655, -7457, -6424, -3573, -970, -5699, 6139, -6334, 2140, -3101, 8478, 1816, -4737, -8118, 9277, 8167, -4375, 9711, -7224, -7777, 2887, -9884, 1275, -1116, -7240, 5451, -3481, 9449, 5439, -9104, 3421, 6344, 6995, 7847, 5166, 2801, 2217, 1640, -8209, -8756, 1586, 121, -908, 276, -8674, 6499, 818, 6184, -5044, 1257, -5923, 7377, 9104, 1040, 2587, -2676, -1172, -4221, -78, 3611, 4554, -4625, 7293, -8077, 1468, 7559, 9935, -7793, -1770, -9166, 3555, 3671, -7560, 9206, -4264, -3848, 2776, 3998, -5961, -8423, -1288, -527, 9968, 1847, -6388, 5042, 8210, -4318, 9107, 525, -278, -7763, 681, -9369, 7563, 5352, 7773, -8169, 3940, 7088, -1872, -5870, 7555, -3032, -2497, 4134, -2995, 3942, 9092, -7739, 6576, 3955, -5175, -9007, 5402, -6827, -3777, 6057, -150, -4567, -94, 5921, -9395, -6154, 6385, -8445, 8889, 921, -7543, -4650, 6461, -7468, -8693, 328, 1855, 7683, 495, -195, 2554, 7950, -1983, -5252, -5584, -9061, -5734, 5425, -7041, 9495, 4647, 1810, -5899, -1038, -5730, -6674, 3818, -2146, -7694, -9968, -5853, 9552, -164, 7672, 9711, -1281, 1151, -1314, -9926, 2948, -1280, 686, 1711, -624, -5462, -8864, 2365, 7361, -4694, 2877, -339, -1560, -2100, -2342};
//        int[] input = {-1,-3,4,-4};
//        int[] input = {1,2,3};
        System.out.println(solve(input));

    }

    // O(n2) approach
    public static int solveOld(int[] A) {
        int length = A.length;
        if (length == 1) return 0;
        for (int i = 1; i < length - 1; i++) {
            int leftSum = 0;
            int rightSum = 0;

            for (int j = 0; j < i; j++) {
                leftSum += A[j];
            }

            for (int j = i + 1; j < length ; j++) {
                rightSum += A[j];
            }

            if (leftSum == rightSum) return i;
        }
        return -1;
    }

    public static int solve(int[] A) {
        int length = A.length;
        if (length == 1) return 0;
        long[] prefixSum = new long[length];
        int sum = 0;
        int k = 0;
        for (int i = 0; i < length; i++) {
            sum += A[i];
            prefixSum[k++] = sum;
        }
        for (int i = 0; i < length; i++) {
            long leftSum = prefixSum[i] - A[i];
            long rightSum = prefixSum[length - 1] - prefixSum[i];
            if (leftSum == rightSum) return i;
        }
        return -1;
    }

}
